package dao.domain;

import java.util.ArrayList;
import java.util.List;

public class ExPoolExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public ExPoolExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andExidIsNull() {
            addCriterion("exid is null");
            return (Criteria) this;
        }

        public Criteria andExidIsNotNull() {
            addCriterion("exid is not null");
            return (Criteria) this;
        }

        public Criteria andExidEqualTo(Integer value) {
            addCriterion("exid =", value, "exid");
            return (Criteria) this;
        }

        public Criteria andExidNotEqualTo(Integer value) {
            addCriterion("exid <>", value, "exid");
            return (Criteria) this;
        }

        public Criteria andExidGreaterThan(Integer value) {
            addCriterion("exid >", value, "exid");
            return (Criteria) this;
        }

        public Criteria andExidGreaterThanOrEqualTo(Integer value) {
            addCriterion("exid >=", value, "exid");
            return (Criteria) this;
        }

        public Criteria andExidLessThan(Integer value) {
            addCriterion("exid <", value, "exid");
            return (Criteria) this;
        }

        public Criteria andExidLessThanOrEqualTo(Integer value) {
            addCriterion("exid <=", value, "exid");
            return (Criteria) this;
        }

        public Criteria andExidIn(List<Integer> values) {
            addCriterion("exid in", values, "exid");
            return (Criteria) this;
        }

        public Criteria andExidNotIn(List<Integer> values) {
            addCriterion("exid not in", values, "exid");
            return (Criteria) this;
        }

        public Criteria andExidBetween(Integer value1, Integer value2) {
            addCriterion("exid between", value1, value2, "exid");
            return (Criteria) this;
        }

        public Criteria andExidNotBetween(Integer value1, Integer value2) {
            addCriterion("exid not between", value1, value2, "exid");
            return (Criteria) this;
        }

        public Criteria andTitle1IsNull() {
            addCriterion("title1 is null");
            return (Criteria) this;
        }

        public Criteria andTitle1IsNotNull() {
            addCriterion("title1 is not null");
            return (Criteria) this;
        }

        public Criteria andTitle1EqualTo(String value) {
            addCriterion("title1 =", value, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1NotEqualTo(String value) {
            addCriterion("title1 <>", value, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1GreaterThan(String value) {
            addCriterion("title1 >", value, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1GreaterThanOrEqualTo(String value) {
            addCriterion("title1 >=", value, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1LessThan(String value) {
            addCriterion("title1 <", value, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1LessThanOrEqualTo(String value) {
            addCriterion("title1 <=", value, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1Like(String value) {
            addCriterion("title1 like", value, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1NotLike(String value) {
            addCriterion("title1 not like", value, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1In(List<String> values) {
            addCriterion("title1 in", values, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1NotIn(List<String> values) {
            addCriterion("title1 not in", values, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1Between(String value1, String value2) {
            addCriterion("title1 between", value1, value2, "title1");
            return (Criteria) this;
        }

        public Criteria andTitle1NotBetween(String value1, String value2) {
            addCriterion("title1 not between", value1, value2, "title1");
            return (Criteria) this;
        }

        public Criteria andUrlIsNull() {
            addCriterion("url is null");
            return (Criteria) this;
        }

        public Criteria andUrlIsNotNull() {
            addCriterion("url is not null");
            return (Criteria) this;
        }

        public Criteria andUrlEqualTo(String value) {
            addCriterion("url =", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotEqualTo(String value) {
            addCriterion("url <>", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThan(String value) {
            addCriterion("url >", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlGreaterThanOrEqualTo(String value) {
            addCriterion("url >=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThan(String value) {
            addCriterion("url <", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLessThanOrEqualTo(String value) {
            addCriterion("url <=", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlLike(String value) {
            addCriterion("url like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotLike(String value) {
            addCriterion("url not like", value, "url");
            return (Criteria) this;
        }

        public Criteria andUrlIn(List<String> values) {
            addCriterion("url in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotIn(List<String> values) {
            addCriterion("url not in", values, "url");
            return (Criteria) this;
        }

        public Criteria andUrlBetween(String value1, String value2) {
            addCriterion("url between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andUrlNotBetween(String value1, String value2) {
            addCriterion("url not between", value1, value2, "url");
            return (Criteria) this;
        }

        public Criteria andDownloadedIsNull() {
            addCriterion("downloaded is null");
            return (Criteria) this;
        }

        public Criteria andDownloadedIsNotNull() {
            addCriterion("downloaded is not null");
            return (Criteria) this;
        }

        public Criteria andDownloadedEqualTo(Integer value) {
            addCriterion("downloaded =", value, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedNotEqualTo(Integer value) {
            addCriterion("downloaded <>", value, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedGreaterThan(Integer value) {
            addCriterion("downloaded >", value, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedGreaterThanOrEqualTo(Integer value) {
            addCriterion("downloaded >=", value, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedLessThan(Integer value) {
            addCriterion("downloaded <", value, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedLessThanOrEqualTo(Integer value) {
            addCriterion("downloaded <=", value, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedIn(List<Integer> values) {
            addCriterion("downloaded in", values, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedNotIn(List<Integer> values) {
            addCriterion("downloaded not in", values, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedBetween(Integer value1, Integer value2) {
            addCriterion("downloaded between", value1, value2, "downloaded");
            return (Criteria) this;
        }

        public Criteria andDownloadedNotBetween(Integer value1, Integer value2) {
            addCriterion("downloaded not between", value1, value2, "downloaded");
            return (Criteria) this;
        }

        public Criteria andLookedIsNull() {
            addCriterion("looked is null");
            return (Criteria) this;
        }

        public Criteria andLookedIsNotNull() {
            addCriterion("looked is not null");
            return (Criteria) this;
        }

        public Criteria andLookedEqualTo(Integer value) {
            addCriterion("looked =", value, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedNotEqualTo(Integer value) {
            addCriterion("looked <>", value, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedGreaterThan(Integer value) {
            addCriterion("looked >", value, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedGreaterThanOrEqualTo(Integer value) {
            addCriterion("looked >=", value, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedLessThan(Integer value) {
            addCriterion("looked <", value, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedLessThanOrEqualTo(Integer value) {
            addCriterion("looked <=", value, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedIn(List<Integer> values) {
            addCriterion("looked in", values, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedNotIn(List<Integer> values) {
            addCriterion("looked not in", values, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedBetween(Integer value1, Integer value2) {
            addCriterion("looked between", value1, value2, "looked");
            return (Criteria) this;
        }

        public Criteria andLookedNotBetween(Integer value1, Integer value2) {
            addCriterion("looked not between", value1, value2, "looked");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expool
     *
     * @mbg.generated do_not_delete_during_merge Fri Jan 03 17:17:47 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table expool
     *
     * @mbg.generated Fri Jan 03 17:17:47 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}