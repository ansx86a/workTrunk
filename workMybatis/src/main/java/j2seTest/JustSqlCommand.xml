<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="JustSqlCommand">
  <resultMap id="BaseResultMap" type="model.Customer" >
    <id column="CustomerID" property="customerid" jdbcType="NCHAR" />
    <result column="CompanyName" property="companyname" jdbcType="NVARCHAR" />
    <result column="ContactName" property="contactname" jdbcType="NVARCHAR" />
    <result column="ContactTitle" property="contacttitle" jdbcType="NVARCHAR" />
    <result column="Address" property="address" jdbcType="NVARCHAR" />
    <result column="City" property="city" jdbcType="NVARCHAR" />
    <result column="Region" property="region" jdbcType="NVARCHAR" />
    <result column="PostalCode" property="postalcode" jdbcType="NVARCHAR" />
    <result column="Country" property="country" jdbcType="NVARCHAR" />
    <result column="Phone" property="phone" jdbcType="NVARCHAR" />
    <result column="Fax" property="fax" jdbcType="NVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, 
    Country, Phone, Fax
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Customers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from Customers
    where CustomerID = #{customerid,jdbcType=NCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from Customers
    where CustomerID = #{customerid,jdbcType=NCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.CustomerExample" >
    delete from Customers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Customer" >
    insert into Customers (CustomerID, CompanyName, ContactName, 
      ContactTitle, Address, City, 
      Region, PostalCode, Country, 
      Phone, Fax)
    values (#{customerid,jdbcType=NCHAR}, #{companyname,jdbcType=NVARCHAR}, #{contactname,jdbcType=NVARCHAR}, 
      #{contacttitle,jdbcType=NVARCHAR}, #{address,jdbcType=NVARCHAR}, #{city,jdbcType=NVARCHAR}, 
      #{region,jdbcType=NVARCHAR}, #{postalcode,jdbcType=NVARCHAR}, #{country,jdbcType=NVARCHAR}, 
      #{phone,jdbcType=NVARCHAR}, #{fax,jdbcType=NVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.Customer" >
    insert into Customers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        CustomerID,
      </if>
      <if test="companyname != null" >
        CompanyName,
      </if>
      <if test="contactname != null" >
        ContactName,
      </if>
      <if test="contacttitle != null" >
        ContactTitle,
      </if>
      <if test="address != null" >
        Address,
      </if>
      <if test="city != null" >
        City,
      </if>
      <if test="region != null" >
        Region,
      </if>
      <if test="postalcode != null" >
        PostalCode,
      </if>
      <if test="country != null" >
        Country,
      </if>
      <if test="phone != null" >
        Phone,
      </if>
      <if test="fax != null" >
        Fax,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerid != null" >
        #{customerid,jdbcType=NCHAR},
      </if>
      <if test="companyname != null" >
        #{companyname,jdbcType=NVARCHAR},
      </if>
      <if test="contactname != null" >
        #{contactname,jdbcType=NVARCHAR},
      </if>
      <if test="contacttitle != null" >
        #{contacttitle,jdbcType=NVARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=NVARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=NVARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=NVARCHAR},
      </if>
      <if test="postalcode != null" >
        #{postalcode,jdbcType=NVARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=NVARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=NVARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from Customers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Customers
    <set >
      <if test="record.customerid != null" >
        CustomerID = #{record.customerid,jdbcType=NCHAR},
      </if>
      <if test="record.companyname != null" >
        CompanyName = #{record.companyname,jdbcType=NVARCHAR},
      </if>
      <if test="record.contactname != null" >
        ContactName = #{record.contactname,jdbcType=NVARCHAR},
      </if>
      <if test="record.contacttitle != null" >
        ContactTitle = #{record.contacttitle,jdbcType=NVARCHAR},
      </if>
      <if test="record.address != null" >
        Address = #{record.address,jdbcType=NVARCHAR},
      </if>
      <if test="record.city != null" >
        City = #{record.city,jdbcType=NVARCHAR},
      </if>
      <if test="record.region != null" >
        Region = #{record.region,jdbcType=NVARCHAR},
      </if>
      <if test="record.postalcode != null" >
        PostalCode = #{record.postalcode,jdbcType=NVARCHAR},
      </if>
      <if test="record.country != null" >
        Country = #{record.country,jdbcType=NVARCHAR},
      </if>
      <if test="record.phone != null" >
        Phone = #{record.phone,jdbcType=NVARCHAR},
      </if>
      <if test="record.fax != null" >
        Fax = #{record.fax,jdbcType=NVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Customers
    set CustomerID = #{record.customerid,jdbcType=NCHAR},
      CompanyName = #{record.companyname,jdbcType=NVARCHAR},
      ContactName = #{record.contactname,jdbcType=NVARCHAR},
      ContactTitle = #{record.contacttitle,jdbcType=NVARCHAR},
      Address = #{record.address,jdbcType=NVARCHAR},
      City = #{record.city,jdbcType=NVARCHAR},
      Region = #{record.region,jdbcType=NVARCHAR},
      PostalCode = #{record.postalcode,jdbcType=NVARCHAR},
      Country = #{record.country,jdbcType=NVARCHAR},
      Phone = #{record.phone,jdbcType=NVARCHAR},
      Fax = #{record.fax,jdbcType=NVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Customer" >
    update Customers
    <set >
      <if test="companyname != null" >
        CompanyName = #{companyname,jdbcType=NVARCHAR},
      </if>
      <if test="contactname != null" >
        ContactName = #{contactname,jdbcType=NVARCHAR},
      </if>
      <if test="contacttitle != null" >
        ContactTitle = #{contacttitle,jdbcType=NVARCHAR},
      </if>
      <if test="address != null" >
        Address = #{address,jdbcType=NVARCHAR},
      </if>
      <if test="city != null" >
        City = #{city,jdbcType=NVARCHAR},
      </if>
      <if test="region != null" >
        Region = #{region,jdbcType=NVARCHAR},
      </if>
      <if test="postalcode != null" >
        PostalCode = #{postalcode,jdbcType=NVARCHAR},
      </if>
      <if test="country != null" >
        Country = #{country,jdbcType=NVARCHAR},
      </if>
      <if test="phone != null" >
        Phone = #{phone,jdbcType=NVARCHAR},
      </if>
      <if test="fax != null" >
        Fax = #{fax,jdbcType=NVARCHAR},
      </if>
    </set>
    where CustomerID = #{customerid,jdbcType=NCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Customer" >
    update Customers
    set CompanyName = #{companyname,jdbcType=NVARCHAR},
      ContactName = #{contactname,jdbcType=NVARCHAR},
      ContactTitle = #{contacttitle,jdbcType=NVARCHAR},
      Address = #{address,jdbcType=NVARCHAR},
      City = #{city,jdbcType=NVARCHAR},
      Region = #{region,jdbcType=NVARCHAR},
      PostalCode = #{postalcode,jdbcType=NVARCHAR},
      Country = #{country,jdbcType=NVARCHAR},
      Phone = #{phone,jdbcType=NVARCHAR},
      Fax = #{fax,jdbcType=NVARCHAR}
    where CustomerID = #{customerid,jdbcType=NCHAR}
  </update>
  
 <update id="updateByPrimaryKeySelective2" parameterType="model.Customer" >
    update Customers
    <set >
      <if test="companyname != null" >
        CompanyName = :companyName,
      </if>
      <if test="contactname != null" >
        ContactName = :contactName,
      </if>
      <if test="contacttitle != null" >
        ContactTitle = :contactTitle,
      </if>
      <if test="address != null" >
        Address = :address,
      </if>
      <if test="city != null" >
        City = :city,
      </if>
      <if test="region != null" >
        Region = :region,
      </if>
      <if test="postalcode != null" >
        PostalCode = :postalCode,
      </if>
      <if test="country != null" >
        Country = :country,
      </if>
      <if test="phone != null" >
        Phone = :phone,
      </if>
      <if test="fax != null" >
        Fax = :fax,
      </if>
    </set>
    where CustomerID = :customerID
  </update>  
  
  
</mapper>